const Test = require('../models/Test.js');

// Other existing controller methods...

/**
 * Generate and save a test created by AI
 * @route POST /api/tests/generate
 * @access Private (Teacher)
 */
exports.saveGeneratedTest = async (req, res) => {
  try {
    const { generatedTest } = req.body;
    
    if (!generatedTest) {
      return res.status(400).json({
        success: false,
        message: 'No test data provided'
      });
    }

    // Get teacher ID from authenticated user if available
    const teacherId = req.teacher ? req.teacher.id : null;

    // Convert AI-generated test to proper Test schema format
    const testData = Test.fromAIGeneratedTest(generatedTest, teacherId);
    
    // Create new test document
    const test = new Test(testData);
    
    // Save to database
    await test.save();
    
    return res.status(201).json({
      success: true,
      message: 'Test saved successfully',
      data: {
        testId: test._id,
        title: test.title
      }
    });
  } catch (error) {
    console.error('Error saving generated test:', error);
    
    return res.status(500).json({
      success: false,
      message: `Failed to save test: ${error.message}`
    });
  }
};

/**
 * List generated tests for a teacher
 * @route GET /api/tests/generated
 * @access Private (Teacher)
 */
exports.listGeneratedTests = async (req, res) => {
  try {
    // Get teacher ID from authenticated request
    const teacherId = req.teacher.id;
    
    // Find tests generated by AI for this teacher
    const tests = await Test.find({ 
      teacher: teacherId, 
      aiGenerated: true 
    })
    .select('title createdAt metadata duration questions')
    .sort({ createdAt: -1 });
    
    return res.status(200).json({
      success: true,
      count: tests.length,
      data: tests
    });
  } catch (error) {
    console.error('Error listing generated tests:', error);
    
    return res.status(500).json({
      success: false,
      message: `Failed to retrieve tests: ${error.message}`
    });
  }
};